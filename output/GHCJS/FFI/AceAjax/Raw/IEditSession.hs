module GHCJS.FFI.AceAjax.Raw.IEditSession where
import qualified GHCJS.Types as GHCJS
import GHCJS.FFI.TypeScript
import GHCJS.DOM.Types (HTMLElement)
import GHCJS.FFI.AceAjax.Raw.Types

foreign import javascript "$1.selection" selection :: IEditSession -> Selection
foreign import javascript "$1.bgTokenizer" bgTokenizer :: IEditSession -> BackgroundTokenizer
foreign import javascript "$1.doc" doc :: IEditSession -> Document
foreign import javascript "$1.on($2,$3)" on :: IEditSession -> (GHCJS.JSString) -> (GHCJS.JSRef ((GHCJS.JSRef obj0) -> IO (GHCJS.JSRef obj1))) -> IO (GHCJS.JSRef obj2)
foreign import javascript "$1.findMatchingBracket($2)" findMatchingBracket :: IEditSession -> (Position) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.addFold($2,$3)" addFold :: IEditSession -> (GHCJS.JSString) -> (Range) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getFoldAt($2,$3)" getFoldAt :: IEditSession -> (GHCJS.JSNumber) -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.removeFold($2)" removeFold :: IEditSession -> (GHCJS.JSRef obj0) -> IO (GHCJS.JSRef obj1)
foreign import javascript "$1.expandFold($2)" expandFold :: IEditSession -> (GHCJS.JSRef obj0) -> IO (GHCJS.JSRef obj1)
foreign import javascript "$1.unfold($2,$3)" unfold :: IEditSession -> (GHCJS.JSRef obj0) -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj1)
foreign import javascript "$1.screenToDocumentColumn($2,$3)" screenToDocumentColumn :: IEditSession -> (GHCJS.JSNumber) -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getFoldDisplayLine($2,$3,$4)" getFoldDisplayLine :: IEditSession -> (GHCJS.JSRef obj0) -> (GHCJS.JSNumber) -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj1)
foreign import javascript "$1.getFoldsInRange($2)" getFoldsInRange :: IEditSession -> (Range) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.highlight($2)" highlight :: IEditSession -> (GHCJS.JSString) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.setDocument($2)" setDocument :: IEditSession -> (Document) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getDocument()" getDocument :: IEditSession -> IO (Document)
foreign import javascript "$1.$resetRowCache($2)" resetRowCache :: IEditSession -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.setValue($2)" setValue :: IEditSession -> (GHCJS.JSString) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.setMode($2)" setMode :: IEditSession -> (GHCJS.JSString) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getValue()" getValue :: IEditSession -> IO (GHCJS.JSString)
foreign import javascript "$1.getSelection()" getSelection :: IEditSession -> IO (Selection)
foreign import javascript "$1.getState($2)" getState :: IEditSession -> (GHCJS.JSNumber) -> IO (GHCJS.JSString)
foreign import javascript "$1.getTokens($2)" getTokens :: IEditSession -> (GHCJS.JSNumber) -> IO (GHCJS.JSArray (TokenInfo))
foreign import javascript "$1.getTokenAt($2,$3)" getTokenAt :: IEditSession -> (GHCJS.JSNumber) -> (GHCJS.JSNumber) -> IO (TokenInfo)
foreign import javascript "$1.setUndoManager($2)" setUndoManager :: IEditSession -> (UndoManager) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getUndoManager()" getUndoManager :: IEditSession -> IO (UndoManager)
foreign import javascript "$1.getTabString()" getTabString :: IEditSession -> IO (GHCJS.JSString)
foreign import javascript "$1.setUseSoftTabs($2)" setUseSoftTabs :: IEditSession -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getUseSoftTabs()" getUseSoftTabs :: IEditSession -> IO (GHCJS.JSBool)
foreign import javascript "$1.setTabSize($2)" setTabSize :: IEditSession -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getTabSize()" getTabSize :: IEditSession -> IO (GHCJS.JSString)
foreign import javascript "$1.isTabStop($2)" isTabStop :: IEditSession -> (GHCJS.JSRef obj0) -> IO (GHCJS.JSBool)
foreign import javascript "$1.setOverwrite($2)" setOverwrite :: IEditSession -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getOverwrite()" getOverwrite :: IEditSession -> IO (GHCJS.JSBool)
foreign import javascript "$1.toggleOverwrite()" toggleOverwrite :: IEditSession -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.addGutterDecoration($2,$3)" addGutterDecoration :: IEditSession -> (GHCJS.JSNumber) -> (GHCJS.JSString) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.removeGutterDecoration($2,$3)" removeGutterDecoration :: IEditSession -> (GHCJS.JSNumber) -> (GHCJS.JSString) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getBreakpoints()" getBreakpoints :: IEditSession -> IO (GHCJS.JSArray (GHCJS.JSNumber))
foreign import javascript "$1.setBreakpoints($2)" setBreakpoints :: IEditSession -> (GHCJS.JSArray (GHCJS.JSRef obj0)) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.clearBreakpoints()" clearBreakpoints :: IEditSession -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.setBreakpoint($2,$3)" setBreakpoint :: IEditSession -> (GHCJS.JSNumber) -> (GHCJS.JSString) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.clearBreakpoint($2)" clearBreakpoint :: IEditSession -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.addMarker($2,$3,$4,$5)" addMarker :: IEditSession -> (Range) -> (GHCJS.JSString) -> (Function) -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.addMarker($2,$3,$4,$5)" addMarker1 :: IEditSession -> (Range) -> (GHCJS.JSString) -> (GHCJS.JSString) -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.addDynamicMarker($2,$3)" addDynamicMarker :: IEditSession -> (GHCJS.JSRef obj0) -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj1)
foreign import javascript "$1.removeMarker($2)" removeMarker :: IEditSession -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getMarkers($2)" getMarkers :: IEditSession -> (GHCJS.JSBool) -> IO (GHCJS.JSArray (GHCJS.JSRef obj0))
foreign import javascript "$1.setAnnotations($2)" setAnnotations :: IEditSession -> (GHCJS.JSArray (Annotation)) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getAnnotations()" getAnnotations :: IEditSession -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.clearAnnotations()" clearAnnotations :: IEditSession -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.$detectNewLine($2)" detectNewLine :: IEditSession -> (GHCJS.JSString) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getWordRange($2,$3)" getWordRange :: IEditSession -> (GHCJS.JSNumber) -> (GHCJS.JSNumber) -> IO (Range)
foreign import javascript "$1.getAWordRange($2,$3)" getAWordRange :: IEditSession -> (GHCJS.JSNumber) -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.setNewLineMode($2)" setNewLineMode :: IEditSession -> (GHCJS.JSString) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getNewLineMode()" getNewLineMode :: IEditSession -> IO (GHCJS.JSString)
foreign import javascript "$1.setUseWorker($2)" setUseWorker :: IEditSession -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getUseWorker()" getUseWorker :: IEditSession -> IO (GHCJS.JSBool)
foreign import javascript "$1.onReloadTokenizer()" onReloadTokenizer :: IEditSession -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.$mode($2)" mode :: IEditSession -> (TextMode) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getMode()" getMode :: IEditSession -> IO (TextMode)
foreign import javascript "$1.setScrollTop($2)" setScrollTop :: IEditSession -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getScrollTop()" getScrollTop :: IEditSession -> IO (GHCJS.JSNumber)
foreign import javascript "$1.setScrollLeft()" setScrollLeft :: IEditSession -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getScrollLeft()" getScrollLeft :: IEditSession -> IO (GHCJS.JSNumber)
foreign import javascript "$1.getScreenWidth()" getScreenWidth :: IEditSession -> IO (GHCJS.JSNumber)
foreign import javascript "$1.getLine($2)" getLine :: IEditSession -> (GHCJS.JSNumber) -> IO (GHCJS.JSString)
foreign import javascript "$1.getLines($2,$3)" getLines :: IEditSession -> (GHCJS.JSNumber) -> (GHCJS.JSNumber) -> IO (GHCJS.JSArray (GHCJS.JSString))
foreign import javascript "$1.getLength()" getLength :: IEditSession -> IO (GHCJS.JSNumber)
foreign import javascript "$1.getTextRange($2)" getTextRange :: IEditSession -> (Range) -> IO (GHCJS.JSString)
foreign import javascript "$1.insert($2,$3)" insert :: IEditSession -> (Position) -> (GHCJS.JSString) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.remove($2)" remove :: IEditSession -> (Range) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.undoChanges($2,$3)" undoChanges :: IEditSession -> (GHCJS.JSArray (GHCJS.JSRef obj0)) -> (GHCJS.JSBool) -> IO (Range)
foreign import javascript "$1.redoChanges($2,$3)" redoChanges :: IEditSession -> (GHCJS.JSArray (GHCJS.JSRef obj0)) -> (GHCJS.JSBool) -> IO (Range)
foreign import javascript "$1.setUndoSelect($2)" setUndoSelect :: IEditSession -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.replace($2,$3)" replace :: IEditSession -> (Range) -> (GHCJS.JSString) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.moveText($2,$3)" moveText :: IEditSession -> (Range) -> (GHCJS.JSRef obj0) -> IO (Range)
foreign import javascript "$1.indentRows($2,$3,$4)" indentRows :: IEditSession -> (GHCJS.JSNumber) -> (GHCJS.JSNumber) -> (GHCJS.JSString) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.outdentRows($2)" outdentRows :: IEditSession -> (Range) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.moveLinesUp($2,$3)" moveLinesUp :: IEditSession -> (GHCJS.JSNumber) -> (GHCJS.JSNumber) -> IO (GHCJS.JSNumber)
foreign import javascript "$1.moveLinesDown($2,$3)" moveLinesDown :: IEditSession -> (GHCJS.JSNumber) -> (GHCJS.JSNumber) -> IO (GHCJS.JSNumber)
foreign import javascript "$1.duplicateLines($2,$3)" duplicateLines :: IEditSession -> (GHCJS.JSNumber) -> (GHCJS.JSNumber) -> IO (GHCJS.JSNumber)
foreign import javascript "$1.setUseWrapMode($2)" setUseWrapMode :: IEditSession -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getUseWrapMode()" getUseWrapMode :: IEditSession -> IO (GHCJS.JSBool)
foreign import javascript "$1.setWrapLimitRange($2,$3)" setWrapLimitRange :: IEditSession -> (GHCJS.JSNumber) -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.adjustWrapLimit($2)" adjustWrapLimit :: IEditSession -> (GHCJS.JSNumber) -> IO (GHCJS.JSBool)
foreign import javascript "$1.getWrapLimit()" getWrapLimit :: IEditSession -> IO (GHCJS.JSNumber)
foreign import javascript "$1.getWrapLimitRange()" getWrapLimitRange :: IEditSession -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.$getDisplayTokens($2,$3)" getDisplayTokens :: IEditSession -> (GHCJS.JSString) -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.$getStringScreenWidth($2,$3,$4)" getStringScreenWidth :: IEditSession -> (GHCJS.JSString) -> (GHCJS.JSNumber) -> (GHCJS.JSNumber) -> IO (GHCJS.JSArray (GHCJS.JSNumber))
foreign import javascript "$1.getRowLength($2)" getRowLength :: IEditSession -> (GHCJS.JSNumber) -> IO (GHCJS.JSNumber)
foreign import javascript "$1.getScreenLastRowColumn($2)" getScreenLastRowColumn :: IEditSession -> (GHCJS.JSNumber) -> IO (GHCJS.JSNumber)
foreign import javascript "$1.getDocumentLastRowColumn($2,$3)" getDocumentLastRowColumn :: IEditSession -> (GHCJS.JSNumber) -> (GHCJS.JSNumber) -> IO (GHCJS.JSNumber)
foreign import javascript "$1.getDocumentLastRowColumnPosition($2,$3)" getDocumentLastRowColumnPosition :: IEditSession -> (GHCJS.JSNumber) -> (GHCJS.JSNumber) -> IO (GHCJS.JSNumber)
foreign import javascript "$1.getRowSplitData()" getRowSplitData :: IEditSession -> IO (GHCJS.JSString)
foreign import javascript "$1.getScreenTabSize($2)" getScreenTabSize :: IEditSession -> (GHCJS.JSNumber) -> IO (GHCJS.JSNumber)
foreign import javascript "$1.screenToDocumentPosition($2,$3)" screenToDocumentPosition :: IEditSession -> (GHCJS.JSNumber) -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.documentToScreenPosition($2,$3)" documentToScreenPosition :: IEditSession -> (GHCJS.JSNumber) -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.documentToScreenColumn($2,$3)" documentToScreenColumn :: IEditSession -> (GHCJS.JSNumber) -> (GHCJS.JSNumber) -> IO (GHCJS.JSNumber)
foreign import javascript "$1.documentToScreenRow($2,$3)" documentToScreenRow :: IEditSession -> (GHCJS.JSNumber) -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getScreenLength()" getScreenLength :: IEditSession -> IO (GHCJS.JSNumber)
