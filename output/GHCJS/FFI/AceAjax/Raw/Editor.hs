module GHCJS.FFI.AceAjax.Raw.Editor where
import qualified GHCJS.Types as GHCJS
import GHCJS.FFI.TypeScript
import GHCJS.DOM.Types (HTMLElement)
import GHCJS.FFI.AceAjax.Raw.Types

foreign import javascript "$1.inMultiSelectMode" inMultiSelectMode :: Editor -> GHCJS.JSBool
foreign import javascript "$1.selectMoreLines($2)" selectMoreLines :: Editor -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.onTextInput($2)" onTextInput :: Editor -> (GHCJS.JSString) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.onCommandKey($2,$3,$4)" onCommandKey :: Editor -> (GHCJS.JSRef obj0) -> (GHCJS.JSRef obj1) -> (GHCJS.JSRef obj2) -> IO (GHCJS.JSRef obj3)
foreign import javascript "$1.commands" commands :: Editor -> CommandManager
foreign import javascript "$1.session" session :: Editor -> IEditSession
foreign import javascript "$1.selection" selection :: Editor -> Selection
foreign import javascript "$1.renderer" renderer :: Editor -> VirtualRenderer
foreign import javascript "$1.keyBinding" keyBinding :: Editor -> KeyBinding
foreign import javascript "$1.container" container :: Editor -> HTMLElement
foreign import javascript "$1.onSelectionChange($2)" onSelectionChange :: Editor -> (GHCJS.JSRef obj0) -> IO (GHCJS.JSRef obj1)
foreign import javascript "$1.onChangeMode($2)" onChangeMode :: Editor -> (GHCJS.JSRef obj0) -> IO (GHCJS.JSRef obj1)
foreign import javascript "$1.execCommand($2,$3)" execCommand :: Editor -> (GHCJS.JSString) -> (GHCJS.JSRef obj0) -> IO (GHCJS.JSRef obj1)
foreign import javascript "$1.setKeyboardHandler($2)" setKeyboardHandler :: Editor -> (GHCJS.JSString) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getKeyboardHandler()" getKeyboardHandler :: Editor -> IO (GHCJS.JSString)
foreign import javascript "$1.setSession($2)" setSession :: Editor -> (IEditSession) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getSession()" getSession :: Editor -> IO (IEditSession)
foreign import javascript "$1.setValue($2,$3)" setValue :: Editor -> (GHCJS.JSString) -> (GHCJS.JSNumber) -> IO (GHCJS.JSString)
foreign import javascript "$1.getValue()" getValue :: Editor -> IO (GHCJS.JSString)
foreign import javascript "$1.getSelection()" getSelection :: Editor -> IO (Selection)
foreign import javascript "$1.resize($2)" resize :: Editor -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.setTheme($2)" setTheme :: Editor -> (GHCJS.JSString) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getTheme()" getTheme :: Editor -> IO (GHCJS.JSString)
foreign import javascript "$1.setStyle($2)" setStyle :: Editor -> (GHCJS.JSString) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.unsetStyle()" unsetStyle :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.setFontSize($2)" setFontSize :: Editor -> (GHCJS.JSString) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.focus()" focus :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.isFocused()" isFocused :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.blur()" blur :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.onFocus()" onFocus :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.onBlur()" onBlur :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.onDocumentChange($2)" onDocumentChange :: Editor -> (GHCJS.JSRef obj0) -> IO (GHCJS.JSRef obj1)
foreign import javascript "$1.onCursorChange()" onCursorChange :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getCopyText()" getCopyText :: Editor -> IO (GHCJS.JSString)
foreign import javascript "$1.onCopy()" onCopy :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.onCut()" onCut :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.onPaste($2)" onPaste :: Editor -> (GHCJS.JSString) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.insert($2)" insert :: Editor -> (GHCJS.JSString) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.setOverwrite($2)" setOverwrite :: Editor -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getOverwrite()" getOverwrite :: Editor -> IO (GHCJS.JSBool)
foreign import javascript "$1.toggleOverwrite()" toggleOverwrite :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.setScrollSpeed($2)" setScrollSpeed :: Editor -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getScrollSpeed()" getScrollSpeed :: Editor -> IO (GHCJS.JSNumber)
foreign import javascript "$1.setDragDelay($2)" setDragDelay :: Editor -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getDragDelay()" getDragDelay :: Editor -> IO (GHCJS.JSNumber)
foreign import javascript "$1.setSelectionStyle($2)" setSelectionStyle :: Editor -> (GHCJS.JSString) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getSelectionStyle()" getSelectionStyle :: Editor -> IO (GHCJS.JSString)
foreign import javascript "$1.setHighlightActiveLine($2)" setHighlightActiveLine :: Editor -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getHighlightActiveLine()" getHighlightActiveLine :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.setHighlightSelectedWord($2)" setHighlightSelectedWord :: Editor -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getHighlightSelectedWord()" getHighlightSelectedWord :: Editor -> IO (GHCJS.JSBool)
foreign import javascript "$1.setShowInvisibles($2)" setShowInvisibles :: Editor -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getShowInvisibles()" getShowInvisibles :: Editor -> IO (GHCJS.JSBool)
foreign import javascript "$1.setShowPrintMargin($2)" setShowPrintMargin :: Editor -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getShowPrintMargin()" getShowPrintMargin :: Editor -> IO (GHCJS.JSBool)
foreign import javascript "$1.setPrintMarginColumn($2)" setPrintMarginColumn :: Editor -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getPrintMarginColumn()" getPrintMarginColumn :: Editor -> IO (GHCJS.JSNumber)
foreign import javascript "$1.setReadOnly($2)" setReadOnly :: Editor -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getReadOnly()" getReadOnly :: Editor -> IO (GHCJS.JSBool)
foreign import javascript "$1.setBehavioursEnabled($2)" setBehavioursEnabled :: Editor -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getBehavioursEnabled()" getBehavioursEnabled :: Editor -> IO (GHCJS.JSBool)
foreign import javascript "$1.setWrapBehavioursEnabled($2)" setWrapBehavioursEnabled :: Editor -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getWrapBehavioursEnabled()" getWrapBehavioursEnabled :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.setShowFoldWidgets($2)" setShowFoldWidgets :: Editor -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getShowFoldWidgets()" getShowFoldWidgets :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.remove($2)" remove :: Editor -> (GHCJS.JSString) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.removeWordRight()" removeWordRight :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.removeWordLeft()" removeWordLeft :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.removeToLineStart()" removeToLineStart :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.removeToLineEnd()" removeToLineEnd :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.splitLine()" splitLine :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.transposeLetters()" transposeLetters :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.toLowerCase()" toLowerCase :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.toUpperCase()" toUpperCase :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.indent()" indent :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.blockIndent()" blockIndent :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.blockOutdent($2)" blockOutdent :: Editor -> (GHCJS.JSString) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.toggleCommentLines()" toggleCommentLines :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getNumberAt()" getNumberAt :: Editor -> IO (GHCJS.JSNumber)
foreign import javascript "$1.modifyNumber($2)" modifyNumber :: Editor -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.removeLines()" removeLines :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.moveLinesDown()" moveLinesDown :: Editor -> IO (GHCJS.JSNumber)
foreign import javascript "$1.moveLinesUp()" moveLinesUp :: Editor -> IO (GHCJS.JSNumber)
foreign import javascript "$1.moveText($2,$3)" moveText :: Editor -> (Range) -> (GHCJS.JSRef obj0) -> IO (Range)
foreign import javascript "$1.copyLinesUp()" copyLinesUp :: Editor -> IO (GHCJS.JSNumber)
foreign import javascript "$1.copyLinesDown()" copyLinesDown :: Editor -> IO (GHCJS.JSNumber)
foreign import javascript "$1.getFirstVisibleRow()" getFirstVisibleRow :: Editor -> IO (GHCJS.JSNumber)
foreign import javascript "$1.getLastVisibleRow()" getLastVisibleRow :: Editor -> IO (GHCJS.JSNumber)
foreign import javascript "$1.isRowVisible($2)" isRowVisible :: Editor -> (GHCJS.JSNumber) -> IO (GHCJS.JSBool)
foreign import javascript "$1.isRowFullyVisible($2)" isRowFullyVisible :: Editor -> (GHCJS.JSNumber) -> IO (GHCJS.JSBool)
foreign import javascript "$1.selectPageDown()" selectPageDown :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.selectPageUp()" selectPageUp :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.gotoPageDown()" gotoPageDown :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.gotoPageUp()" gotoPageUp :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.scrollPageDown()" scrollPageDown :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.scrollPageUp()" scrollPageUp :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.scrollToRow()" scrollToRow :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.scrollToLine($2,$3,$4,$5)" scrollToLine :: Editor -> (GHCJS.JSNumber) -> (GHCJS.JSBool) -> (GHCJS.JSBool) -> (Function) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.centerSelection()" centerSelection :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.getCursorPosition()" getCursorPosition :: Editor -> IO (Position)
foreign import javascript "$1.getCursorPositionScreen()" getCursorPositionScreen :: Editor -> IO (GHCJS.JSNumber)
foreign import javascript "$1.getSelectionRange()" getSelectionRange :: Editor -> IO (Range)
foreign import javascript "$1.selectAll()" selectAll :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.clearSelection()" clearSelection :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.moveCursorTo($2,$3,$4)" moveCursorTo :: Editor -> (GHCJS.JSNumber) -> (GHCJS.JSNumber) -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.moveCursorToPosition($2)" moveCursorToPosition :: Editor -> (Position) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.jumpToMatching()" jumpToMatching :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.gotoLine($2,$3,$4)" gotoLine :: Editor -> (GHCJS.JSNumber) -> (GHCJS.JSNumber) -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.navigateTo($2,$3)" navigateTo :: Editor -> (GHCJS.JSNumber) -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.navigateUp($2)" navigateUp :: Editor -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.navigateDown($2)" navigateDown :: Editor -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.navigateLeft($2)" navigateLeft :: Editor -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.navigateRight($2)" navigateRight :: Editor -> (GHCJS.JSNumber) -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.navigateLineStart()" navigateLineStart :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.navigateLineEnd()" navigateLineEnd :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.navigateFileEnd()" navigateFileEnd :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.navigateFileStart()" navigateFileStart :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.navigateWordRight()" navigateWordRight :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.navigateWordLeft()" navigateWordLeft :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.replace($2,$3)" replace :: Editor -> (GHCJS.JSString) -> (GHCJS.JSRef obj0) -> IO (GHCJS.JSRef obj1)
foreign import javascript "$1.replaceAll($2,$3)" replaceAll :: Editor -> (GHCJS.JSString) -> (GHCJS.JSRef obj0) -> IO (GHCJS.JSRef obj1)
foreign import javascript "$1.getLastSearchOptions()" getLastSearchOptions :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.find($2,$3,$4)" find :: Editor -> (GHCJS.JSString) -> (GHCJS.JSRef obj0) -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj1)
foreign import javascript "$1.findNext($2,$3)" findNext :: Editor -> (GHCJS.JSRef obj0) -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj1)
foreign import javascript "$1.findPrevious($2,$3)" findPrevious :: Editor -> (GHCJS.JSRef obj0) -> (GHCJS.JSBool) -> IO (GHCJS.JSRef obj1)
foreign import javascript "$1.undo()" undo :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.redo()" redo :: Editor -> IO (GHCJS.JSRef obj0)
foreign import javascript "$1.destroy()" destroy :: Editor -> IO (GHCJS.JSRef obj0)
